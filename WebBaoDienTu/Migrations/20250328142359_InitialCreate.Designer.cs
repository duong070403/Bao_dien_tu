// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBaoDienTu.Models;

#nullable disable

namespace WebBaoDienTu.Migrations
{
    [DbContext(typeof(BaoDienTuContext))]
    [Migration("20250328142359_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebBaoDienTu.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("category_name");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__D54EE9B464DC374C");

                    b.HasIndex(new[] { "CategoryName" }, "UQ__Categori__5189E2553B2E3EC2")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebBaoDienTu.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("news_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_approved");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("NewsId")
                        .HasName("PK__News__4C27CCD8946A0AC3");

                    b.HasIndex(new[] { "AuthorId" }, "IX_News_author_id");

                    b.HasIndex(new[] { "CategoryId" }, "IX_News_category_id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("WebBaoDienTu.Models.NewsSharing", b =>
                {
                    b.Property<int>("ShareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("share_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShareId"));

                    b.Property<int>("NewsId")
                        .HasColumnType("int")
                        .HasColumnName("news_id");

                    b.Property<string>("ReceiverEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("receiver_email");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<DateTime>("SharedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("shared_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ShareId")
                        .HasName("PK__NewsShar__C36E8AE5286BFCE6");

                    b.HasIndex(new[] { "NewsId" }, "IX_NewsSharing_news_id");

                    b.HasIndex(new[] { "SenderId" }, "IX_NewsSharing_sender_id");

                    b.ToTable("NewsSharing", (string)null);
                });

            modelBuilder.Entity("WebBaoDienTu.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subscription_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<DateTime>("SubscribedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("subscribed_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user_email");

                    b.HasKey("SubscriptionId")
                        .HasName("PK__Subscrip__863A7EC1CA7BC579");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("WebBaoDienTu.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370FCC5C26E1");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E616488E3A22A")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebBaoDienTu.Models.News", b =>
                {
                    b.HasOne("WebBaoDienTu.Models.User", "Author")
                        .WithMany("News")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__News__author_id__412EB0B6");

                    b.HasOne("WebBaoDienTu.Models.Category", "Category")
                        .WithMany("News")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__News__category_i__4222D4EF");

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebBaoDienTu.Models.NewsSharing", b =>
                {
                    b.HasOne("WebBaoDienTu.Models.News", "News")
                        .WithMany("NewsSharings")
                        .HasForeignKey("NewsId")
                        .IsRequired()
                        .HasConstraintName("FK__NewsShari__news___48CFD27E");

                    b.HasOne("WebBaoDienTu.Models.User", "Sender")
                        .WithMany("NewsSharings")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__NewsShari__sende__49C3F6B7");

                    b.Navigation("News");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("WebBaoDienTu.Models.Category", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("WebBaoDienTu.Models.News", b =>
                {
                    b.Navigation("NewsSharings");
                });

            modelBuilder.Entity("WebBaoDienTu.Models.User", b =>
                {
                    b.Navigation("News");

                    b.Navigation("NewsSharings");
                });
#pragma warning restore 612, 618
        }
    }
}
